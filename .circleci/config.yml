version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Login to Docker Registry
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Setup Env Variables
          command: echo 'export CI_BRANCH=":$CIRCLE_BRANCH"' >> $BASH_ENV
      - run:
          name: Pull Images
          command: |
            pull_status=$(docker-compose pull --quiet; echo $?)
            if [ $pull_status -ne 0 ]; then
              echo "[INFO] No images exist for this tag, pulling from master branch instead"
              current_branch=$CIRCLE_BRANCH
              export CI_BRANCH=":master"
              docker-compose pull --ignore-pull-failures
            fi
      - run:
          name: Build
          command: |
            docker-compose build node
            docker-compose run --rm node npm run build
            docker-compose build
      - run:
          name: Push Images
          command: docker-compose push

  test:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Login to Docker Registry
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Setup Env Variables
          command: echo 'export CI_BRANCH=":$CIRCLE_BRANCH"' >> $BASH_ENV
      - run:
          name: Pull Images
          command: docker-compose pull
      - run:
          name: Migrate
          command: docker-compose run --rm django python manage.py migrate
      - run:
          name: pytest
          command: make pytest-ci
      - run:
          name: jest
          command: make jest-ci
      - store_artifacts:
          path: htmlcov
      - store_artifacts:
          path: ~/repo/coverage/lcov-report
      - codecov/upload:
          file: ~/repo/coverage.xml
      - codecov/upload:
          file: ~/repo/coverage/clover.xml

#   deploy:
#     docker:
#       - image: circleci/python:3.8.0
#     working_directory: ~/repo
#     steps:
#       - checkout
#       - run:
#           name: Install Ansible
#           command: |
#             sudo pip install pipenv
#             pipenv install ansible
#       - add_ssh_keys:
#           fingerprints:
#             - 70:22:d0:f1:6a:7b:4b:98:33:cc:4b:11:72:3d:8a:cb
#       - run:
#           name: Deploy
#           command: |
#             cd ~/repo/deploy/ansible
#             pipenv run ansible-playbook deploy.yml

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
