version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Ansible
          command: |
            sudo apt update -y
            sudo apt install -y language-pack-ja-base language-pack-ja
            sudo apt install -y software-properties-common
            sudo apt-add-repository -y ppa:ansible/ansible
            sudo apt update -y
            sudo apt install -y curl python-dev git
            sudo curl "https://bootstrap.pypa.io/get-pip.py" -o "/tmp/get-pip.py"
            sudo python /tmp/get-pip.py
            sudo pip install --upgrade pip && pip install --upgrade setuptools
            sudo pip install ansible
      - run:
          name: Test ansible-playbook
          command: |
            cd ~/repo/deploy/ansible
            ansible-playbook ec2_provision.yml
      - run:
          name: Login to Docker Registry
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Setup Env Variables
          command: echo 'export CI_BRANCH=":$CIRCLE_BRANCH"' >> $BASH_ENV
      - run:
          name: Pull Images
          # this always seems to fail and pull from master
          command: |
            pull_status=$(docker-compose pull --quiet; echo $?)
            if [ $pull_status -ne 0 ]; then
              echo "[INFO] No images exist for this tag, pulling from master branch instead"
              current_branch=$CIRCLE_BRANCH
              export CI_BRANCH=":master"
              docker-compose pull --ignore-pull-failures
            fi
      - run:
          name: Build
          command: docker-compose build
      - run:
          name: Push Images
          command: docker-compose push

  test:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Login to Docker Registry
          command: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Setup Env Variables
          command: echo 'export CI_BRANCH=":$CIRCLE_BRANCH"' >> $BASH_ENV
      - run:
          name: Pull Images
          command: docker-compose pull
      - run:
          name: Bring up dependency containers
          command: docker-compose run --rm start_dependencies
      - run:
          name: Migrate
          command: docker-compose run --rm django python manage.py migrate
      - run:
          name: pytest
          command: make pytest-ci
      - run:
          name: jest
          command: make jest-ci
      - store_artifacts:
          path: htmlcov
      - store_artifacts:
          path: ~/repo/coverage/lcov-report
      - codecov/upload:
          file: ~/repo/coverage.xml
      - codecov/upload:
          file: ~/repo/coverage/clover.xml

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build