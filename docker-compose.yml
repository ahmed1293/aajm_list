version: '3.2'

services:

  start_dependencies:
    image: dadarek/wait-for-dependencies:0.2
    environment:
      - TIMEOUT_LENGTH=60
    depends_on:
      - postgres
    command: postgres:${POSTGRES_PORT}

  postgres:
    image: ${DOCKER_REGISTRY}postgres${CI_BRANCH}
    build:
      context: .
      dockerfile: compose/postgres/Dockerfile
      cache_from:
        - ${DOCKER_REGISTRY}postgres${CI_BRANCH}
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  django:
    image: ${DOCKER_REGISTRY}django${CI_BRANCH}
    build:
      context: .
      dockerfile: compose/django/Dockerfile
      cache_from:
        - ${DOCKER_REGISTRY}django${CI_BRANCH}
    command: python manage.py runserver_plus 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - .:/code
    environment:
      - DJANGO_SECRET_KEY
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  node:
    image: ${DOCKER_REGISTRY}node${CI_BRANCH}
    build:
      context: .
      dockerfile: compose/node/Dockerfile
      cache_from:
        - ${DOCKER_REGISTRY}node${CI_BRANCH}
    command: npm run dev


volumes:
  pgdata: