version: '3.2'

services:

  postgres:
    image: ${DOCKER_REGISTRY}postgres${CI_BRANCH}
    build:
      context: .
      dockerfile: compose/postgres/Dockerfile
      cache_from:
        - ${DOCKER_REGISTRY}postgres${CI_BRANCH}
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  django:
    image: ${DOCKER_REGISTRY}django${CI_BRANCH}
    build:
      context: .
      dockerfile: compose/django/Dockerfile
      cache_from:
        - ${DOCKER_REGISTRY}django${CI_BRANCH}
    command: gunicorn aajm_list.wsgi:application --bind 0.0.0.0:8000
    restart: always
    working_dir: /code
    volumes:
      - staticfiles:/code/staticfiles
    expose:
      - "8000"
    depends_on:
      - postgres
    environment:
      - DJANGO_SECRET_KEY
      - COMMIT_REF
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

volumes:
  pgdata:
  staticfiles:
